import socket
import threading

# Server configuration
HOST = '127.0.0.1'
PORT = 55555

# List to store client connections
clients = []

# Function to handle client connections
def handle_client(client_socket, client_address):
    print(f"[NEW CONNECTION] {client_address} connected.")

    # Add client to the list of clients
    clients.append(client_socket)

    # Receive and broadcast messages
    while True:
        try:
            message = client_socket.recv(1024).decode('utf-8')
            if message:
                print(f"[{client_address}] {message}")
                broadcast(message, client_socket)
            else:
                # If no data is received, remove client from the list and close the connection
                clients.remove(client_socket)
                client_socket.close()
                break
        except:
            break

# Function to broadcast messages to all clients
def broadcast(message, sender_socket):
    for client in clients:
        if client != sender_socket:
            try:
                client.send(message.encode('utf-8'))
            except:
                # If unable to send message to a client, close the connection and remove it from the list
                client.close()
                clients.remove(client)

# Main function to run the server
def main():
    # Create socket object
    server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server.bind((HOST, PORT))
    server.listen()

    print(f"[LISTENING] Server is listening on {HOST}:{PORT}.")

    # Accept incoming connections and start a new thread for each client
    while True:
        client_socket, client_address = server.accept()
        thread = threading.Thread(target=handle_client, args=(client_socket, client_address))
        thread.start()

if __name__ == "__main__":
    main()
